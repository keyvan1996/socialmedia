{"ast":null,"code":"var _jsxFileName = \"/Users/keyvanshabani/My-Files/codes/social-website/client/src/components/update/Update.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeRequest } from \"../../axios\";\nimport \"./update.scss\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = _ref => {\n  _s();\n\n  let {\n    setOpenUpdate,\n    user\n  } = _ref;\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [texts, setTexts] = useState({\n    name: \"\",\n    city: \"\",\n    website: \"\"\n  });\n\n  const upload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = () => {\n    setTexts(prev => ({ ...prev,\n      [e.target.name]: [e.target.value]\n    }));\n  };\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const queryClient = useQueryClient();\n  const mutation = useMutation(user => {\n    return makeRequest.put(\"/users\", user);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"user\"]);\n    }\n  });\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let coverUrl = user.coverPic;\n    let profileUrl = user.profilePic;\n    coverUrl = cover && (await upload(cover));\n    profileUrl = profile && (await upload(profile));\n    mutation.mutate({ ...texts,\n      coverPic: coverUrl,\n      profilePic: profileUrl\n    });\n    setOpenUpdate(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update\",\n    children: [\"Update\", /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"website\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenUpdate(false),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"o3aAfeNRQR+Q3AYjPGQM1SJjg0w=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/keyvanshabani/My-Files/codes/social-website/client/src/components/update/Update.jsx"],"names":["makeRequest","useMutation","useQueryClient","useContext","useState","Update","setOpenUpdate","user","cover","setCover","profile","setProfile","texts","setTexts","name","city","website","upload","file","formData","FormData","append","res","post","data","err","console","log","handleChange","prev","e","target","value","currentUser","AuthContext","queryClient","mutation","put","onSuccess","invalidateQueries","handleClick","preventDefault","coverUrl","coverPic","profileUrl","profilePic","mutate"],"mappings":"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","sourcesContent":["import { makeRequest } from \"../../axios\";\nimport \"./update.scss\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useContext, useState } from \"react\";\n\nconst Update = ({ setOpenUpdate, user }) => {\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [texts, setTexts] = useState({\n    name: \"\",\n    city: \"\",\n    website: \"\",\n  });\n\n  const upload = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = () => {\n    setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\n  };\n\n  const { currentUser } = useContext(AuthContext);\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (user) => {\n      return makeRequest.put(\"/users\", user);\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"user\"]);\n      },\n    }\n  );\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    let coverUrl = user.coverPic;\n    let profileUrl = user.profilePic;\n\n    coverUrl = cover && (await upload(cover));\n    profileUrl = profile && (await upload(profile));\n\n    mutation.mutate({ ...texts, coverPic: coverUrl, profilePic: profileUrl });\n    setOpenUpdate(false);\n  };\n\n  return (\n    <div className=\"update\">\n      Update\n      <form action=\"\">\n        <input type=\"file\" />\n        <input type=\"file\" />\n        <input type=\"text\" name=\"name\" onChange={handleChange} />\n        <input type=\"text\" name=\"city\" onChange={handleChange} />\n        <input type=\"text\" name=\"website\" onChange={handleChange} />\n        <button onClick={handleClick}>Update</button>\n      </form>\n      <button onClick={() => setOpenUpdate(false)}>X</button>\n    </div>\n  );\n};\n\nexport default Update;\n"]},"metadata":{},"sourceType":"module"}